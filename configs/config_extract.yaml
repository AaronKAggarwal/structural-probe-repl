# configs/config_extract.yaml

# Default input files (relative to where train_probe.py is launched, i.e., PROJECT_ROOT)
# These should point to your PTB-SD CoNLL-X files
input_conll_files:
  train: "data/ptb_stanford_dependencies_conllx/ptb3-wsj-train.conllx"
  dev: "data/ptb_stanford_dependencies_conllx/ptb3-wsj-dev.conllx"
  test: "data/ptb_stanford_dependencies_conllx/ptb3-wsj-test.conllx"
  sample_dev: null
  # You can add more, e.g., sample: "path/to/sample.conllx"

model:
  hf_model_name: "bert-base-cased" # Example: replace with desired model
  # layers_to_extract: [0, 1, 6, 11, 12] # Example: initial_embeds, layer1, mid, last_hidden, (pooler_output if model has it and is desired)
                                       # Layer indices for hidden_states tuple (0=embeds, 1=layer1_out, ..., N=last_layer_out)
  layers_to_extract: "all"           # Alternative: extract all layers
  alignment_strategy: "mean"         # "mean" or "first"

output_hdf5:
  # Base path where HDF5 files will be saved, relative to where script is launched (PROJECT_ROOT)
  # The script will create subdirectories here based on model name etc. or save directly.
  # Filename structure: {model_name_sanitized}_{split_name}_layers-{layers_str}_align-{alignment_strategy}.hdf5
  base_output_path: "data/embeddings_ptb_sd"

runtime:
  device: "auto" # "cpu", "mps", "cuda", "auto"
  batch_size: 32

# Hydra specific settings for this script's runs
hydra:
  run:
    # Use the raw model.hf_model_name here
    dir: outputs_extract_embeddings/${now:%Y-%m-%d}/${now:%H-%M-%S}-${model.hf_model_name}
  job:
    chdir: true
    # Use the raw model.hf_model_name here too
    name: extract_${model.hf_model_name} 
  job_logging: # It's good practice to include Hydra's default logging config
    formatters:
      simple:
        format: '%(asctime)s [%(name)s][%(levelname)s] - %(message)s'

  # Ensure hf_model_name_sanitized is defined for hydra output path formatting
  # This can be done by adding it to the config or using a resolver if needed earlier.
  # For simplicity, we can just use a simpler name for the output dir if this causes issues.
  # Alternative for run.dir if the above interpolation is tricky at init:
  # run:
  #   dir: outputs_extract_embeddings/${now:%Y-%m-%d}/${now:%H-%M-%S}

# To make model_name_sanitized available for hydra.run.dir path:
# This is a bit advanced, might be simpler to hardcode part of the path or use a simpler job name.
# For now, the script constructs filenames internally.
# The Hydra output directory `outputs_extract_embeddings/...` will contain logs for the extraction script itself.
# The HDF5 files are saved to `output_hdf5.base_output_path`.